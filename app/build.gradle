apply plugin: 'com.android.application'
apply plugin: 'org.greenrobot.greendao'
//获取时间戳
def getDate() {
    def date = new Date()
    def formattedDate = date.format('yyyyMMddHHmm')
    return formattedDate
}
def verCode = 1
android {
    compileSdkVersion 25
    buildToolsVersion "25.0.3"

    signingConfigs {
        signingConfig {
            keyAlias 'xxx'
            keyPassword 'xxx'
            storeFile file('xxx')
            storePassword 'xxx'
        }
    }

    defaultConfig {
        applicationId "com.clock.zc.punchtheclock"
        minSdkVersion 14
        targetSdkVersion 25
        multiDexEnabled true
        versionCode verCode
        versionName APP_VERSION
        flavorDimensions "versionCode"
        resValue("string", 'app_version', APP_VERSION)
        buildConfigField "boolean", "LEO_DEBUG", "true"
        buildConfigField 'String', 'API_SERVER_URL', RELEASE_API_SERVER_URL
        buildConfigField 'String', 'API_SERVER_URL_MALL', RELEASE_API_SERVER_URL_MALL
        generatedDensities = []
        signingConfig signingConfigs.signingConfig
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }
    lintOptions {
        abortOnError false
    }
    aaptOptions {
        additionalParameters "--no-version-vectors"
    }
    buildTypes {
        release {
            buildConfigField 'String', 'API_SERVER_URL', RELEASE_API_SERVER_URL
            buildConfigField 'String', 'API_SERVER_URL_MALL', RELEASE_API_SERVER_URL_MALL
            buildConfigField 'String', 'IM_SERVER_HOST', RELEASE_IM_SERVER_HOST
            buildConfigField 'int', 'IM_SERVER_PORT', RELEASE_IM_SERVER_PORT
            buildConfigField "boolean", "LEO_DEBUG", RELEASE_LEO_DEBUG
            minifyEnabled true
            zipAlignEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        ysc {
            buildConfigField 'String', 'API_SERVER_URL', YSC_API_SERVER_URL
            buildConfigField 'String', 'API_SERVER_URL_MALL', YSC_API_SERVER_URL_MALL
            buildConfigField 'String', 'IM_SERVER_HOST', YSC_IM_SERVER_HOST
            buildConfigField 'int', 'IM_SERVER_PORT', YSC_IM_SERVER_PORT
            buildConfigField "boolean", "LEO_DEBUG", YSC_LEO_DEBUG
            minifyEnabled true
            zipAlignEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        develop {
            buildConfigField 'String', 'API_SERVER_URL', DEVELOP_API_SERVER_URL
            buildConfigField 'String', 'API_SERVER_URL_MALL', DEVELOP_API_SERVER_URL_MALL
            buildConfigField 'String', 'IM_SERVER_HOST', DEVELOP_IM_SERVER_HOST
            buildConfigField 'int', 'IM_SERVER_PORT', DEVELOP_IM_SERVER_PORT
            buildConfigField "boolean", "LEO_DEBUG", DEVELOP_LEO_DEBUG
            minifyEnabled true
            zipAlignEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        inside_test {
            buildConfigField 'String', 'API_SERVER_URL', INSIDE_TEST_API_SERVER_URL
            buildConfigField 'String', 'API_SERVER_URL_MALL', INSIDE_TEST_API_SERVER_URL_MALL
            buildConfigField 'String', 'IM_SERVER_HOST', INSIDE_TEST_IM_SERVER_HOST
            buildConfigField 'int', 'IM_SERVER_PORT', INSIDE_TEST_IM_SERVER_PORT
            buildConfigField "boolean", "LEO_DEBUG", INSIDE_TEST_LEO_DEBUG
            minifyEnabled true
            zipAlignEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {
            buildConfigField 'String', 'API_SERVER_URL', RELEASE_API_SERVER_URL
            buildConfigField 'String', 'API_SERVER_URL_MALL', RELEASE_API_SERVER_URL_MALL
            buildConfigField 'String', 'IM_SERVER_HOST', RELEASE_IM_SERVER_HOST
            buildConfigField 'int', 'IM_SERVER_PORT', RELEASE_IM_SERVER_PORT
            buildConfigField "boolean", "LEO_DEBUG", RELEASE_LEO_DEBUG
        }
    }
    dexOptions {
        javaMaxHeapSize "2g"
    }

    packagingOptions {
        exclude 'META-INF/DEPENDENCIES.txt'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/dependencies.txt'
        exclude 'META-INF/LGPL2.1'
    }

    //渠道Flavors，我这里写了一些常用的
    productFlavors {
        commonsoon {
            manifestPlaceholders = [UMENG_CHANNEL_VALUE: "commonsoon"]
        }
        zhushou91 {
            manifestPlaceholders = [UMENG_CHANNEL_VALUE: "zhushou91"]
        }
        market360 {
            manifestPlaceholders = [UMENG_CHANNEL_VALUE: "market360"]
        }
        xiaomi {
            manifestPlaceholders = [UMENG_CHANNEL_VALUE: "xiaomi"]
        }
        wandoujia {
            manifestPlaceholders = [UMENG_CHANNEL_VALUE: "wandoujia"]
        }
        marketandroid {
            manifestPlaceholders = [UMENG_CHANNEL_VALUE: "marketandroid"]
        }
        yingyonghui {
            manifestPlaceholders = [UMENG_CHANNEL_VALUE: "yingyonghui"]
        }
        jifengmarket {
            manifestPlaceholders = [UMENG_CHANNEL_VALUE: "jifengmarket"]
        }
        mumayi {
            manifestPlaceholders = [UMENG_CHANNEL_VALUE: "mumayi"]
        }
        anzhimarket {
            manifestPlaceholders = [UMENG_CHANNEL_VALUE: "anzhimarket"]
        }
        yingyongbao {
            manifestPlaceholders = [UMENG_CHANNEL_VALUE: "yingyongbao"]
        }
        huaweimarket {
            manifestPlaceholders = [UMENG_CHANNEL_VALUE: "huaweimarket"]
        }
    }
    allprojects {
        repositories {
            mavenCentral()
            maven { url "https://jitpack.io" }
        }
    }

    //修改生成的apk名字
    applicationVariants.all { variant ->
        variant.outputs.all {
            def newName
            def timeNow

            def outDirectory = 'apk'

            if ("true".equals(IS_JENKINS)) {
                timeNow = JENKINS_TIME
                outDirectory = 'D:/apk'
                newName = 'yj-android-v' +
                        APP_VERSION + '-' + variant.productFlavors[0].name + timeNow + '-' + variant.buildType.name + '.apk'
            } else {
                timeNow = getDate()
                if (variant.buildType.name.equals('debug')) {
                    newName = "yj-android-v${APP_VERSION}-debug.apk"
                } else {
                    newName = 'yj-android-v' +
                            APP_VERSION + '-' + variant.productFlavors[0].name + timeNow + '-' + variant.buildType.name + '.apk'
                }
            }

            outputFileName = new File(outDirectory, newName)
//            //新名字
//            def newName
//            //时间戳
//            def timeNow
//            //输出文件夹
//            def outDirectory
//            //是否为Jenkins打包，输出路径不同
//            if ("true".equals(IS_JENKINS)) {
//                //BUILD_PATH为服务器输出路径
//                timeNow = BUILD_TIME
//                outDirectory = BUILD_PATH_JENKINS
//                //JKApp-v1.0.1-xiaomi-release.apk
//                newName = APPNAME+"-v"+APP_VERSION + '-' + variant.productFlavors[0].name + '-' + variant.buildType.name + '.apk'
//            } else {
//                //本机打包输出在本机路径
//                timeNow = getDate()
//                outDirectory = BUILD_PATH_LOCAL
//                newName = APPNAME+"-v"+APP_VERSION + '-' + variant.productFlavors[0].name + '-' + variant.buildType.name + '.apk'
//            }
//            def file = new File(outDirectory+"/"+timeNow, newName)
//            outputFileName = file


        }
    }
    greendao {
        schemaVersion 2
        targetGenDir 'src/main/java'
    }
    sourceSets {
        main {
            // 设置Jni so文件路径
            jniLibs.srcDirs = ['libs']
        }
    }
}
//android {
//    compileSdkVersion 25
//    buildToolsVersion "25.0.3"
//    defaultConfig {
//        applicationId "com.clock.zc.punchtheclock"
//        minSdkVersion 15
//        targetSdkVersion 25
//        versionCode 1
//        versionName "1.0"
//        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
//    }
//    buildTypes {
//        release {
//            minifyEnabled false
//            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
//        }
//    }
//    greendao {
//        schemaVersion 2
//        targetGenDir 'src/main/java'
//    }
//    sourceSets {
//        main {
//            // 设置Jni so文件路径
//            jniLibs.srcDirs = ['libs']
//        }
//    }
//}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    androidTestImplementation('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    implementation 'com.android.support:appcompat-v7:25.3.1'
    testImplementation 'junit:junit:4.12'
    implementation 'com.android.support.constraint:constraint-layout:1.0.2'
    compile 'org.xutils:xutils:3.5.0'
    compile 'org.greenrobot:greendao:3.1.0'
    compile 'org.greenrobot:greendao-generator:3.1.0'
}
